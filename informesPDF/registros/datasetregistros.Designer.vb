'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18408
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("datasetregistros"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class datasetregistros
    Inherits Global.System.Data.DataSet
    
    Private tableCREDITOS_COP_RCV As CREDITOS_COP_RCVDataTable
    
    Private tableINFO_GENERAL As INFO_GENERALDataTable
    
    Private tableDATOS_EXTRA As DATOS_EXTRADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CREDITOS_COP_RCV")) Is Nothing) Then
                MyBase.Tables.Add(New CREDITOS_COP_RCVDataTable(ds.Tables("CREDITOS_COP_RCV")))
            End If
            If (Not (ds.Tables("INFO_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_GENERALDataTable(ds.Tables("INFO_GENERAL")))
            End If
            If (Not (ds.Tables("DATOS_EXTRA")) Is Nothing) Then
                MyBase.Tables.Add(New DATOS_EXTRADataTable(ds.Tables("DATOS_EXTRA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CREDITOS_COP_RCV() As CREDITOS_COP_RCVDataTable
        Get
            Return Me.tableCREDITOS_COP_RCV
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INFO_GENERAL() As INFO_GENERALDataTable
        Get
            Return Me.tableINFO_GENERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DATOS_EXTRA() As DATOS_EXTRADataTable
        Get
            Return Me.tableDATOS_EXTRA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As datasetregistros = CType(MyBase.Clone,datasetregistros)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CREDITOS_COP_RCV")) Is Nothing) Then
                MyBase.Tables.Add(New CREDITOS_COP_RCVDataTable(ds.Tables("CREDITOS_COP_RCV")))
            End If
            If (Not (ds.Tables("INFO_GENERAL")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_GENERALDataTable(ds.Tables("INFO_GENERAL")))
            End If
            If (Not (ds.Tables("DATOS_EXTRA")) Is Nothing) Then
                MyBase.Tables.Add(New DATOS_EXTRADataTable(ds.Tables("DATOS_EXTRA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCREDITOS_COP_RCV = CType(MyBase.Tables("CREDITOS_COP_RCV"),CREDITOS_COP_RCVDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCREDITOS_COP_RCV) Is Nothing) Then
                Me.tableCREDITOS_COP_RCV.InitVars
            End If
        End If
        Me.tableINFO_GENERAL = CType(MyBase.Tables("INFO_GENERAL"),INFO_GENERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINFO_GENERAL) Is Nothing) Then
                Me.tableINFO_GENERAL.InitVars
            End If
        End If
        Me.tableDATOS_EXTRA = CType(MyBase.Tables("DATOS_EXTRA"),DATOS_EXTRADataTable)
        If (initTable = true) Then
            If (Not (Me.tableDATOS_EXTRA) Is Nothing) Then
                Me.tableDATOS_EXTRA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "datasetregistros"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/datasetregistros.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCREDITOS_COP_RCV = New CREDITOS_COP_RCVDataTable()
        MyBase.Tables.Add(Me.tableCREDITOS_COP_RCV)
        Me.tableINFO_GENERAL = New INFO_GENERALDataTable()
        MyBase.Tables.Add(Me.tableINFO_GENERAL)
        Me.tableDATOS_EXTRA = New DATOS_EXTRADataTable()
        MyBase.Tables.Add(Me.tableDATOS_EXTRA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCREDITOS_COP_RCV() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINFO_GENERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDATOS_EXTRA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As datasetregistros = New datasetregistros()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CREDITOS_COP_RCVRowChangeEventHandler(ByVal sender As Object, ByVal e As CREDITOS_COP_RCVRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INFO_GENERALRowChangeEventHandler(ByVal sender As Object, ByVal e As INFO_GENERALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DATOS_EXTRARowChangeEventHandler(ByVal sender As Object, ByVal e As DATOS_EXTRARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CREDITOS_COP_RCVDataTable
        Inherits Global.System.Data.TypedTableBase(Of CREDITOS_COP_RCVRow)
        
        Private columnCREDITO_COP As Global.System.Data.DataColumn
        
        Private columnPERIODO_COP As Global.System.Data.DataColumn
        
        Private columnIMPORTE_COP As Global.System.Data.DataColumn
        
        Private columnCREDITO_RCV As Global.System.Data.DataColumn
        
        Private columnPERIODO_RCV As Global.System.Data.DataColumn
        
        Private columnIMPORTE_RCV As Global.System.Data.DataColumn
        
        Private columnN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CREDITOS_COP_RCV"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITO_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITO_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODO_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODO_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITO_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITO_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODO_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODO_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CREDITOS_COP_RCVRow
            Get
                Return CType(Me.Rows(index),CREDITOS_COP_RCVRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CREDITOS_COP_RCVRowChanging As CREDITOS_COP_RCVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CREDITOS_COP_RCVRowChanged As CREDITOS_COP_RCVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CREDITOS_COP_RCVRowDeleting As CREDITOS_COP_RCVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CREDITOS_COP_RCVRowDeleted As CREDITOS_COP_RCVRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCREDITOS_COP_RCVRow(ByVal row As CREDITOS_COP_RCVRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCREDITOS_COP_RCVRow(ByVal CREDITO_COP As String, ByVal PERIODO_COP As String, ByVal IMPORTE_COP As Decimal, ByVal CREDITO_RCV As String, ByVal PERIODO_RCV As String, ByVal IMPORTE_RCV As Decimal, ByVal N As Integer) As CREDITOS_COP_RCVRow
            Dim rowCREDITOS_COP_RCVRow As CREDITOS_COP_RCVRow = CType(Me.NewRow,CREDITOS_COP_RCVRow)
            Dim columnValuesArray() As Object = New Object() {CREDITO_COP, PERIODO_COP, IMPORTE_COP, CREDITO_RCV, PERIODO_RCV, IMPORTE_RCV, N}
            rowCREDITOS_COP_RCVRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCREDITOS_COP_RCVRow)
            Return rowCREDITOS_COP_RCVRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CREDITOS_COP_RCVDataTable = CType(MyBase.Clone,CREDITOS_COP_RCVDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CREDITOS_COP_RCVDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCREDITO_COP = MyBase.Columns("CREDITO_COP")
            Me.columnPERIODO_COP = MyBase.Columns("PERIODO_COP")
            Me.columnIMPORTE_COP = MyBase.Columns("IMPORTE_COP")
            Me.columnCREDITO_RCV = MyBase.Columns("CREDITO_RCV")
            Me.columnPERIODO_RCV = MyBase.Columns("PERIODO_RCV")
            Me.columnIMPORTE_RCV = MyBase.Columns("IMPORTE_RCV")
            Me.columnN = MyBase.Columns("N")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCREDITO_COP = New Global.System.Data.DataColumn("CREDITO_COP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITO_COP)
            Me.columnPERIODO_COP = New Global.System.Data.DataColumn("PERIODO_COP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODO_COP)
            Me.columnIMPORTE_COP = New Global.System.Data.DataColumn("IMPORTE_COP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_COP)
            Me.columnCREDITO_RCV = New Global.System.Data.DataColumn("CREDITO_RCV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITO_RCV)
            Me.columnPERIODO_RCV = New Global.System.Data.DataColumn("PERIODO_RCV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODO_RCV)
            Me.columnIMPORTE_RCV = New Global.System.Data.DataColumn("IMPORTE_RCV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_RCV)
            Me.columnN = New Global.System.Data.DataColumn("N", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN)
            Me.columnCREDITO_COP.ReadOnly = true
            Me.columnCREDITO_COP.MaxLength = 1
            Me.columnPERIODO_COP.ReadOnly = true
            Me.columnPERIODO_COP.MaxLength = 1
            Me.columnIMPORTE_COP.ReadOnly = true
            Me.columnCREDITO_RCV.ReadOnly = true
            Me.columnCREDITO_RCV.MaxLength = 1
            Me.columnPERIODO_RCV.ReadOnly = true
            Me.columnPERIODO_RCV.MaxLength = 1
            Me.columnIMPORTE_RCV.ReadOnly = true
            Me.columnN.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCREDITOS_COP_RCVRow() As CREDITOS_COP_RCVRow
            Return CType(Me.NewRow,CREDITOS_COP_RCVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CREDITOS_COP_RCVRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CREDITOS_COP_RCVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CREDITOS_COP_RCVRowChangedEvent) Is Nothing) Then
                RaiseEvent CREDITOS_COP_RCVRowChanged(Me, New CREDITOS_COP_RCVRowChangeEvent(CType(e.Row,CREDITOS_COP_RCVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CREDITOS_COP_RCVRowChangingEvent) Is Nothing) Then
                RaiseEvent CREDITOS_COP_RCVRowChanging(Me, New CREDITOS_COP_RCVRowChangeEvent(CType(e.Row,CREDITOS_COP_RCVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CREDITOS_COP_RCVRowDeletedEvent) Is Nothing) Then
                RaiseEvent CREDITOS_COP_RCVRowDeleted(Me, New CREDITOS_COP_RCVRowChangeEvent(CType(e.Row,CREDITOS_COP_RCVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CREDITOS_COP_RCVRowDeletingEvent) Is Nothing) Then
                RaiseEvent CREDITOS_COP_RCVRowDeleting(Me, New CREDITOS_COP_RCVRowChangeEvent(CType(e.Row,CREDITOS_COP_RCVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCREDITOS_COP_RCVRow(ByVal row As CREDITOS_COP_RCVRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As datasetregistros = New datasetregistros()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CREDITOS_COP_RCVDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INFO_GENERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of INFO_GENERALRow)
        
        Private columnG_DELEGACION As Global.System.Data.DataColumn
        
        Private columnG_SUBDELEGACION As Global.System.Data.DataColumn
        
        Private columnG_FECH_MOV As Global.System.Data.DataColumn
        
        Private columnG_RAZON As Global.System.Data.DataColumn
        
        Private columnG_REGPAT As Global.System.Data.DataColumn
        
        Private columnG_ACTIVIDAD As Global.System.Data.DataColumn
        
        Private columnG_DOMICILIO As Global.System.Data.DataColumn
        
        Private columnG_IMPORTE_TOTAL_LETRAS As Global.System.Data.DataColumn
        
        Private columnG_JEF_DEP As Global.System.Data.DataColumn
        
        Private columnG_INI_JEF_DEP As Global.System.Data.DataColumn
        
        Private columnG_JEF_OFI_REG As Global.System.Data.DataColumn
        
        Private columnG_INI_JEF_OFI_REG As Global.System.Data.DataColumn
        
        Private columnG_JEF_OFI_EMI As Global.System.Data.DataColumn
        
        Private columnG_INI_JEF_OFI_EMI As Global.System.Data.DataColumn
        
        Private columnG_JEF_OFI_COB As Global.System.Data.DataColumn
        
        Private columnG_INI_JEF_OFI_COB As Global.System.Data.DataColumn
        
        Private columnG_INTEGRADOR As Global.System.Data.DataColumn
        
        Private columnG_INI_INTEGRADOR As Global.System.Data.DataColumn
        
        Private columnG_FECH_AFIL As Global.System.Data.DataColumn
        
        Private columnG_RFC As Global.System.Data.DataColumn
        
        Private columnG_NOM_DELEGADO As Global.System.Data.DataColumn
        
        Private columnG_INI_NOM_DELEGADO As Global.System.Data.DataColumn
        
        Private columnG_CRED_MAX As Global.System.Data.DataColumn
        
        Private columnRALE_USADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INFO_GENERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_DELEGACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_DELEGACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_SUBDELEGACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_SUBDELEGACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_FECH_MOVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_FECH_MOV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_RAZONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_RAZON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_REGPATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_REGPAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_ACTIVIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_ACTIVIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_DOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_IMPORTE_TOTAL_LETRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_IMPORTE_TOTAL_LETRAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_JEF_DEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_JEF_DEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_JEF_DEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_JEF_DEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_JEF_OFI_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_JEF_OFI_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_JEF_OFI_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_JEF_OFI_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_JEF_OFI_EMIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_JEF_OFI_EMI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_JEF_OFI_EMIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_JEF_OFI_EMI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_JEF_OFI_COBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_JEF_OFI_COB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_JEF_OFI_COBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_JEF_OFI_COB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INTEGRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INTEGRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_INTEGRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_INTEGRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_FECH_AFILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_FECH_AFIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_RFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_NOM_DELEGADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_NOM_DELEGADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_INI_NOM_DELEGADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_INI_NOM_DELEGADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property G_CRED_MAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnG_CRED_MAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RALE_USADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRALE_USADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INFO_GENERALRow
            Get
                Return CType(Me.Rows(index),INFO_GENERALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INFO_GENERALRowChanging As INFO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INFO_GENERALRowChanged As INFO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INFO_GENERALRowDeleting As INFO_GENERALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INFO_GENERALRowDeleted As INFO_GENERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINFO_GENERALRow(ByVal row As INFO_GENERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINFO_GENERALRow( _
                    ByVal G_DELEGACION As String,  _
                    ByVal G_SUBDELEGACION As String,  _
                    ByVal G_FECH_MOV As String,  _
                    ByVal G_RAZON As String,  _
                    ByVal G_REGPAT As String,  _
                    ByVal G_ACTIVIDAD As String,  _
                    ByVal G_DOMICILIO As String,  _
                    ByVal G_IMPORTE_TOTAL_LETRAS As String,  _
                    ByVal G_JEF_DEP As String,  _
                    ByVal G_INI_JEF_DEP As String,  _
                    ByVal G_JEF_OFI_REG As String,  _
                    ByVal G_INI_JEF_OFI_REG As String,  _
                    ByVal G_JEF_OFI_EMI As String,  _
                    ByVal G_INI_JEF_OFI_EMI As String,  _
                    ByVal G_JEF_OFI_COB As String,  _
                    ByVal G_INI_JEF_OFI_COB As String,  _
                    ByVal G_INTEGRADOR As String,  _
                    ByVal G_INI_INTEGRADOR As String,  _
                    ByVal G_FECH_AFIL As String,  _
                    ByVal G_RFC As String,  _
                    ByVal G_NOM_DELEGADO As String,  _
                    ByVal G_INI_NOM_DELEGADO As String,  _
                    ByVal G_CRED_MAX As Integer,  _
                    ByVal RALE_USADO As String) As INFO_GENERALRow
            Dim rowINFO_GENERALRow As INFO_GENERALRow = CType(Me.NewRow,INFO_GENERALRow)
            Dim columnValuesArray() As Object = New Object() {G_DELEGACION, G_SUBDELEGACION, G_FECH_MOV, G_RAZON, G_REGPAT, G_ACTIVIDAD, G_DOMICILIO, G_IMPORTE_TOTAL_LETRAS, G_JEF_DEP, G_INI_JEF_DEP, G_JEF_OFI_REG, G_INI_JEF_OFI_REG, G_JEF_OFI_EMI, G_INI_JEF_OFI_EMI, G_JEF_OFI_COB, G_INI_JEF_OFI_COB, G_INTEGRADOR, G_INI_INTEGRADOR, G_FECH_AFIL, G_RFC, G_NOM_DELEGADO, G_INI_NOM_DELEGADO, G_CRED_MAX, RALE_USADO}
            rowINFO_GENERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINFO_GENERALRow)
            Return rowINFO_GENERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INFO_GENERALDataTable = CType(MyBase.Clone,INFO_GENERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INFO_GENERALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnG_DELEGACION = MyBase.Columns("G_DELEGACION")
            Me.columnG_SUBDELEGACION = MyBase.Columns("G_SUBDELEGACION")
            Me.columnG_FECH_MOV = MyBase.Columns("G_FECH_MOV")
            Me.columnG_RAZON = MyBase.Columns("G_RAZON")
            Me.columnG_REGPAT = MyBase.Columns("G_REGPAT")
            Me.columnG_ACTIVIDAD = MyBase.Columns("G_ACTIVIDAD")
            Me.columnG_DOMICILIO = MyBase.Columns("G_DOMICILIO")
            Me.columnG_IMPORTE_TOTAL_LETRAS = MyBase.Columns("G_IMPORTE_TOTAL_LETRAS")
            Me.columnG_JEF_DEP = MyBase.Columns("G_JEF_DEP")
            Me.columnG_INI_JEF_DEP = MyBase.Columns("G_INI_JEF_DEP")
            Me.columnG_JEF_OFI_REG = MyBase.Columns("G_JEF_OFI_REG")
            Me.columnG_INI_JEF_OFI_REG = MyBase.Columns("G_INI_JEF_OFI_REG")
            Me.columnG_JEF_OFI_EMI = MyBase.Columns("G_JEF_OFI_EMI")
            Me.columnG_INI_JEF_OFI_EMI = MyBase.Columns("G_INI_JEF_OFI_EMI")
            Me.columnG_JEF_OFI_COB = MyBase.Columns("G_JEF_OFI_COB")
            Me.columnG_INI_JEF_OFI_COB = MyBase.Columns("G_INI_JEF_OFI_COB")
            Me.columnG_INTEGRADOR = MyBase.Columns("G_INTEGRADOR")
            Me.columnG_INI_INTEGRADOR = MyBase.Columns("G_INI_INTEGRADOR")
            Me.columnG_FECH_AFIL = MyBase.Columns("G_FECH_AFIL")
            Me.columnG_RFC = MyBase.Columns("G_RFC")
            Me.columnG_NOM_DELEGADO = MyBase.Columns("G_NOM_DELEGADO")
            Me.columnG_INI_NOM_DELEGADO = MyBase.Columns("G_INI_NOM_DELEGADO")
            Me.columnG_CRED_MAX = MyBase.Columns("G_CRED_MAX")
            Me.columnRALE_USADO = MyBase.Columns("RALE_USADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnG_DELEGACION = New Global.System.Data.DataColumn("G_DELEGACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_DELEGACION)
            Me.columnG_SUBDELEGACION = New Global.System.Data.DataColumn("G_SUBDELEGACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_SUBDELEGACION)
            Me.columnG_FECH_MOV = New Global.System.Data.DataColumn("G_FECH_MOV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_FECH_MOV)
            Me.columnG_RAZON = New Global.System.Data.DataColumn("G_RAZON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_RAZON)
            Me.columnG_REGPAT = New Global.System.Data.DataColumn("G_REGPAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_REGPAT)
            Me.columnG_ACTIVIDAD = New Global.System.Data.DataColumn("G_ACTIVIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_ACTIVIDAD)
            Me.columnG_DOMICILIO = New Global.System.Data.DataColumn("G_DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_DOMICILIO)
            Me.columnG_IMPORTE_TOTAL_LETRAS = New Global.System.Data.DataColumn("G_IMPORTE_TOTAL_LETRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_IMPORTE_TOTAL_LETRAS)
            Me.columnG_JEF_DEP = New Global.System.Data.DataColumn("G_JEF_DEP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_JEF_DEP)
            Me.columnG_INI_JEF_DEP = New Global.System.Data.DataColumn("G_INI_JEF_DEP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_JEF_DEP)
            Me.columnG_JEF_OFI_REG = New Global.System.Data.DataColumn("G_JEF_OFI_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_JEF_OFI_REG)
            Me.columnG_INI_JEF_OFI_REG = New Global.System.Data.DataColumn("G_INI_JEF_OFI_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_JEF_OFI_REG)
            Me.columnG_JEF_OFI_EMI = New Global.System.Data.DataColumn("G_JEF_OFI_EMI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_JEF_OFI_EMI)
            Me.columnG_INI_JEF_OFI_EMI = New Global.System.Data.DataColumn("G_INI_JEF_OFI_EMI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_JEF_OFI_EMI)
            Me.columnG_JEF_OFI_COB = New Global.System.Data.DataColumn("G_JEF_OFI_COB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_JEF_OFI_COB)
            Me.columnG_INI_JEF_OFI_COB = New Global.System.Data.DataColumn("G_INI_JEF_OFI_COB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_JEF_OFI_COB)
            Me.columnG_INTEGRADOR = New Global.System.Data.DataColumn("G_INTEGRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INTEGRADOR)
            Me.columnG_INI_INTEGRADOR = New Global.System.Data.DataColumn("G_INI_INTEGRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_INTEGRADOR)
            Me.columnG_FECH_AFIL = New Global.System.Data.DataColumn("G_FECH_AFIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_FECH_AFIL)
            Me.columnG_RFC = New Global.System.Data.DataColumn("G_RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_RFC)
            Me.columnG_NOM_DELEGADO = New Global.System.Data.DataColumn("G_NOM_DELEGADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_NOM_DELEGADO)
            Me.columnG_INI_NOM_DELEGADO = New Global.System.Data.DataColumn("G_INI_NOM_DELEGADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_INI_NOM_DELEGADO)
            Me.columnG_CRED_MAX = New Global.System.Data.DataColumn("G_CRED_MAX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnG_CRED_MAX)
            Me.columnRALE_USADO = New Global.System.Data.DataColumn("RALE_USADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRALE_USADO)
            Me.columnG_DELEGACION.ReadOnly = true
            Me.columnG_DELEGACION.MaxLength = 1
            Me.columnG_SUBDELEGACION.ReadOnly = true
            Me.columnG_SUBDELEGACION.MaxLength = 1
            Me.columnG_FECH_MOV.ReadOnly = true
            Me.columnG_FECH_MOV.MaxLength = 1
            Me.columnG_RAZON.ReadOnly = true
            Me.columnG_RAZON.MaxLength = 1
            Me.columnG_REGPAT.ReadOnly = true
            Me.columnG_REGPAT.MaxLength = 1
            Me.columnG_ACTIVIDAD.ReadOnly = true
            Me.columnG_ACTIVIDAD.MaxLength = 1
            Me.columnG_DOMICILIO.ReadOnly = true
            Me.columnG_DOMICILIO.MaxLength = 1
            Me.columnG_IMPORTE_TOTAL_LETRAS.ReadOnly = true
            Me.columnG_IMPORTE_TOTAL_LETRAS.MaxLength = 1
            Me.columnG_JEF_DEP.ReadOnly = true
            Me.columnG_JEF_DEP.MaxLength = 1
            Me.columnG_INI_JEF_DEP.ReadOnly = true
            Me.columnG_INI_JEF_DEP.MaxLength = 1
            Me.columnG_JEF_OFI_REG.ReadOnly = true
            Me.columnG_JEF_OFI_REG.MaxLength = 1
            Me.columnG_INI_JEF_OFI_REG.ReadOnly = true
            Me.columnG_INI_JEF_OFI_REG.MaxLength = 1
            Me.columnG_JEF_OFI_EMI.ReadOnly = true
            Me.columnG_JEF_OFI_EMI.MaxLength = 1
            Me.columnG_INI_JEF_OFI_EMI.ReadOnly = true
            Me.columnG_INI_JEF_OFI_EMI.MaxLength = 1
            Me.columnG_JEF_OFI_COB.ReadOnly = true
            Me.columnG_JEF_OFI_COB.MaxLength = 1
            Me.columnG_INI_JEF_OFI_COB.ReadOnly = true
            Me.columnG_INI_JEF_OFI_COB.MaxLength = 1
            Me.columnG_INTEGRADOR.ReadOnly = true
            Me.columnG_INTEGRADOR.MaxLength = 1
            Me.columnG_INI_INTEGRADOR.ReadOnly = true
            Me.columnG_INI_INTEGRADOR.MaxLength = 1
            Me.columnG_FECH_AFIL.ReadOnly = true
            Me.columnG_FECH_AFIL.MaxLength = 1
            Me.columnG_RFC.ReadOnly = true
            Me.columnG_RFC.MaxLength = 1
            Me.columnG_NOM_DELEGADO.ReadOnly = true
            Me.columnG_NOM_DELEGADO.MaxLength = 1
            Me.columnG_INI_NOM_DELEGADO.ReadOnly = true
            Me.columnG_INI_NOM_DELEGADO.MaxLength = 1
            Me.columnG_CRED_MAX.ReadOnly = true
            Me.columnRALE_USADO.ReadOnly = true
            Me.columnRALE_USADO.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINFO_GENERALRow() As INFO_GENERALRow
            Return CType(Me.NewRow,INFO_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INFO_GENERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INFO_GENERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INFO_GENERALRowChangedEvent) Is Nothing) Then
                RaiseEvent INFO_GENERALRowChanged(Me, New INFO_GENERALRowChangeEvent(CType(e.Row,INFO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INFO_GENERALRowChangingEvent) Is Nothing) Then
                RaiseEvent INFO_GENERALRowChanging(Me, New INFO_GENERALRowChangeEvent(CType(e.Row,INFO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INFO_GENERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent INFO_GENERALRowDeleted(Me, New INFO_GENERALRowChangeEvent(CType(e.Row,INFO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INFO_GENERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent INFO_GENERALRowDeleting(Me, New INFO_GENERALRowChangeEvent(CType(e.Row,INFO_GENERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINFO_GENERALRow(ByVal row As INFO_GENERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As datasetregistros = New datasetregistros()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INFO_GENERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DATOS_EXTRADataTable
        Inherits Global.System.Data.TypedTableBase(Of DATOS_EXTRARow)
        
        Private columnE_SUBDEL As Global.System.Data.DataColumn
        
        Private columnE_RALE_COP As Global.System.Data.DataColumn
        
        Private columnE_RALE_RCV As Global.System.Data.DataColumn
        
        Private columnE_INTEGRADOR As Global.System.Data.DataColumn
        
        Private columnE_SALARIO_MINIMO As Global.System.Data.DataColumn
        
        Private columnE_REGPAT As Global.System.Data.DataColumn
        
        Private columnE_CRED_COP As Global.System.Data.DataColumn
        
        Private columnE_IMPORTE_COP As Global.System.Data.DataColumn
        
        Private columnE_RANGO As Global.System.Data.DataColumn
        
        Private columnE_CRED_RCV As Global.System.Data.DataColumn
        
        Private columnE_IMPORTE_RCV As Global.System.Data.DataColumn
        
        Private columnE_OTROS_CREDITOS As Global.System.Data.DataColumn
        
        Private columnE_REGISTRO_ANALISIS As Global.System.Data.DataColumn
        
        Private columnE_REGISTRO_SOLICITUD As Global.System.Data.DataColumn
        
        Private columnE_REGISTRO_DICTAMEN As Global.System.Data.DataColumn
        
        Private columnE_AFIL_01 As Global.System.Data.DataColumn
        
        Private columnE_DOMICILIO_FISCAL As Global.System.Data.DataColumn
        
        Private columnE_REFERENCIA As Global.System.Data.DataColumn
        
        Private columnE_FECHA_CLASIFICACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DATOS_EXTRA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_SUBDELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_SUBDEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_RALE_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_RALE_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_RALE_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_RALE_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_INTEGRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_INTEGRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_SALARIO_MINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_SALARIO_MINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_REGPATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_REGPAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_CRED_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_CRED_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_IMPORTE_COPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_IMPORTE_COP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_RANGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_RANGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_CRED_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_CRED_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_IMPORTE_RCVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_IMPORTE_RCV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_OTROS_CREDITOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_OTROS_CREDITOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_REGISTRO_ANALISISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_REGISTRO_ANALISIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_REGISTRO_SOLICITUDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_REGISTRO_SOLICITUD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_REGISTRO_DICTAMENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_REGISTRO_DICTAMEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_AFIL_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_AFIL_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_DOMICILIO_FISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_DOMICILIO_FISCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_REFERENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_REFERENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property E_FECHA_CLASIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_FECHA_CLASIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DATOS_EXTRARow
            Get
                Return CType(Me.Rows(index),DATOS_EXTRARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_EXTRARowChanging As DATOS_EXTRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_EXTRARowChanged As DATOS_EXTRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_EXTRARowDeleting As DATOS_EXTRARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DATOS_EXTRARowDeleted As DATOS_EXTRARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDATOS_EXTRARow(ByVal row As DATOS_EXTRARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDATOS_EXTRARow( _
                    ByVal E_SUBDEL As String,  _
                    ByVal E_RALE_COP As String,  _
                    ByVal E_RALE_RCV As String,  _
                    ByVal E_INTEGRADOR As String,  _
                    ByVal E_SALARIO_MINIMO As String,  _
                    ByVal E_REGPAT As String,  _
                    ByVal E_CRED_COP As String,  _
                    ByVal E_IMPORTE_COP As String,  _
                    ByVal E_RANGO As String,  _
                    ByVal E_CRED_RCV As String,  _
                    ByVal E_IMPORTE_RCV As String,  _
                    ByVal E_OTROS_CREDITOS As String,  _
                    ByVal E_REGISTRO_ANALISIS As String,  _
                    ByVal E_REGISTRO_SOLICITUD As String,  _
                    ByVal E_REGISTRO_DICTAMEN As String,  _
                    ByVal E_AFIL_01 As String,  _
                    ByVal E_DOMICILIO_FISCAL As String,  _
                    ByVal E_REFERENCIA As String,  _
                    ByVal E_FECHA_CLASIFICACION As Date) As DATOS_EXTRARow
            Dim rowDATOS_EXTRARow As DATOS_EXTRARow = CType(Me.NewRow,DATOS_EXTRARow)
            Dim columnValuesArray() As Object = New Object() {E_SUBDEL, E_RALE_COP, E_RALE_RCV, E_INTEGRADOR, E_SALARIO_MINIMO, E_REGPAT, E_CRED_COP, E_IMPORTE_COP, E_RANGO, E_CRED_RCV, E_IMPORTE_RCV, E_OTROS_CREDITOS, E_REGISTRO_ANALISIS, E_REGISTRO_SOLICITUD, E_REGISTRO_DICTAMEN, E_AFIL_01, E_DOMICILIO_FISCAL, E_REFERENCIA, E_FECHA_CLASIFICACION}
            rowDATOS_EXTRARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDATOS_EXTRARow)
            Return rowDATOS_EXTRARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DATOS_EXTRADataTable = CType(MyBase.Clone,DATOS_EXTRADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DATOS_EXTRADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnE_SUBDEL = MyBase.Columns("E_SUBDEL")
            Me.columnE_RALE_COP = MyBase.Columns("E_RALE_COP")
            Me.columnE_RALE_RCV = MyBase.Columns("E_RALE_RCV")
            Me.columnE_INTEGRADOR = MyBase.Columns("E_INTEGRADOR")
            Me.columnE_SALARIO_MINIMO = MyBase.Columns("E_SALARIO_MINIMO")
            Me.columnE_REGPAT = MyBase.Columns("E_REGPAT")
            Me.columnE_CRED_COP = MyBase.Columns("E_CRED_COP")
            Me.columnE_IMPORTE_COP = MyBase.Columns("E_IMPORTE_COP")
            Me.columnE_RANGO = MyBase.Columns("E_RANGO")
            Me.columnE_CRED_RCV = MyBase.Columns("E_CRED_RCV")
            Me.columnE_IMPORTE_RCV = MyBase.Columns("E_IMPORTE_RCV")
            Me.columnE_OTROS_CREDITOS = MyBase.Columns("E_OTROS_CREDITOS")
            Me.columnE_REGISTRO_ANALISIS = MyBase.Columns("E_REGISTRO_ANALISIS")
            Me.columnE_REGISTRO_SOLICITUD = MyBase.Columns("E_REGISTRO_SOLICITUD")
            Me.columnE_REGISTRO_DICTAMEN = MyBase.Columns("E_REGISTRO_DICTAMEN")
            Me.columnE_AFIL_01 = MyBase.Columns("E_AFIL_01")
            Me.columnE_DOMICILIO_FISCAL = MyBase.Columns("E_DOMICILIO_FISCAL")
            Me.columnE_REFERENCIA = MyBase.Columns("E_REFERENCIA")
            Me.columnE_FECHA_CLASIFICACION = MyBase.Columns("E_FECHA_CLASIFICACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnE_SUBDEL = New Global.System.Data.DataColumn("E_SUBDEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_SUBDEL)
            Me.columnE_RALE_COP = New Global.System.Data.DataColumn("E_RALE_COP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_RALE_COP)
            Me.columnE_RALE_RCV = New Global.System.Data.DataColumn("E_RALE_RCV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_RALE_RCV)
            Me.columnE_INTEGRADOR = New Global.System.Data.DataColumn("E_INTEGRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_INTEGRADOR)
            Me.columnE_SALARIO_MINIMO = New Global.System.Data.DataColumn("E_SALARIO_MINIMO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_SALARIO_MINIMO)
            Me.columnE_REGPAT = New Global.System.Data.DataColumn("E_REGPAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_REGPAT)
            Me.columnE_CRED_COP = New Global.System.Data.DataColumn("E_CRED_COP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_CRED_COP)
            Me.columnE_IMPORTE_COP = New Global.System.Data.DataColumn("E_IMPORTE_COP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_IMPORTE_COP)
            Me.columnE_RANGO = New Global.System.Data.DataColumn("E_RANGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_RANGO)
            Me.columnE_CRED_RCV = New Global.System.Data.DataColumn("E_CRED_RCV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_CRED_RCV)
            Me.columnE_IMPORTE_RCV = New Global.System.Data.DataColumn("E_IMPORTE_RCV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_IMPORTE_RCV)
            Me.columnE_OTROS_CREDITOS = New Global.System.Data.DataColumn("E_OTROS_CREDITOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_OTROS_CREDITOS)
            Me.columnE_REGISTRO_ANALISIS = New Global.System.Data.DataColumn("E_REGISTRO_ANALISIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_REGISTRO_ANALISIS)
            Me.columnE_REGISTRO_SOLICITUD = New Global.System.Data.DataColumn("E_REGISTRO_SOLICITUD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_REGISTRO_SOLICITUD)
            Me.columnE_REGISTRO_DICTAMEN = New Global.System.Data.DataColumn("E_REGISTRO_DICTAMEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_REGISTRO_DICTAMEN)
            Me.columnE_AFIL_01 = New Global.System.Data.DataColumn("E_AFIL_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_AFIL_01)
            Me.columnE_DOMICILIO_FISCAL = New Global.System.Data.DataColumn("E_DOMICILIO_FISCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_DOMICILIO_FISCAL)
            Me.columnE_REFERENCIA = New Global.System.Data.DataColumn("E_REFERENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_REFERENCIA)
            Me.columnE_FECHA_CLASIFICACION = New Global.System.Data.DataColumn("E_FECHA_CLASIFICACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_FECHA_CLASIFICACION)
            Me.columnE_SUBDEL.ReadOnly = true
            Me.columnE_SUBDEL.MaxLength = 1
            Me.columnE_RALE_COP.ReadOnly = true
            Me.columnE_RALE_COP.MaxLength = 1
            Me.columnE_RALE_RCV.ReadOnly = true
            Me.columnE_RALE_RCV.MaxLength = 1
            Me.columnE_INTEGRADOR.ReadOnly = true
            Me.columnE_INTEGRADOR.MaxLength = 1
            Me.columnE_SALARIO_MINIMO.ReadOnly = true
            Me.columnE_SALARIO_MINIMO.MaxLength = 1
            Me.columnE_REGPAT.ReadOnly = true
            Me.columnE_REGPAT.MaxLength = 1
            Me.columnE_CRED_COP.ReadOnly = true
            Me.columnE_CRED_COP.MaxLength = 1
            Me.columnE_IMPORTE_COP.ReadOnly = true
            Me.columnE_IMPORTE_COP.MaxLength = 1
            Me.columnE_RANGO.ReadOnly = true
            Me.columnE_RANGO.MaxLength = 1
            Me.columnE_CRED_RCV.ReadOnly = true
            Me.columnE_CRED_RCV.MaxLength = 1
            Me.columnE_IMPORTE_RCV.ReadOnly = true
            Me.columnE_IMPORTE_RCV.MaxLength = 1
            Me.columnE_OTROS_CREDITOS.ReadOnly = true
            Me.columnE_OTROS_CREDITOS.MaxLength = 1
            Me.columnE_REGISTRO_ANALISIS.ReadOnly = true
            Me.columnE_REGISTRO_ANALISIS.MaxLength = 1
            Me.columnE_REGISTRO_SOLICITUD.ReadOnly = true
            Me.columnE_REGISTRO_SOLICITUD.MaxLength = 1
            Me.columnE_REGISTRO_DICTAMEN.ReadOnly = true
            Me.columnE_REGISTRO_DICTAMEN.MaxLength = 1
            Me.columnE_AFIL_01.ReadOnly = true
            Me.columnE_AFIL_01.MaxLength = 1
            Me.columnE_DOMICILIO_FISCAL.ReadOnly = true
            Me.columnE_DOMICILIO_FISCAL.MaxLength = 1
            Me.columnE_REFERENCIA.ReadOnly = true
            Me.columnE_REFERENCIA.MaxLength = 1
            Me.columnE_FECHA_CLASIFICACION.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDATOS_EXTRARow() As DATOS_EXTRARow
            Return CType(Me.NewRow,DATOS_EXTRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DATOS_EXTRARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DATOS_EXTRARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DATOS_EXTRARowChangedEvent) Is Nothing) Then
                RaiseEvent DATOS_EXTRARowChanged(Me, New DATOS_EXTRARowChangeEvent(CType(e.Row,DATOS_EXTRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DATOS_EXTRARowChangingEvent) Is Nothing) Then
                RaiseEvent DATOS_EXTRARowChanging(Me, New DATOS_EXTRARowChangeEvent(CType(e.Row,DATOS_EXTRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DATOS_EXTRARowDeletedEvent) Is Nothing) Then
                RaiseEvent DATOS_EXTRARowDeleted(Me, New DATOS_EXTRARowChangeEvent(CType(e.Row,DATOS_EXTRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DATOS_EXTRARowDeletingEvent) Is Nothing) Then
                RaiseEvent DATOS_EXTRARowDeleting(Me, New DATOS_EXTRARowChangeEvent(CType(e.Row,DATOS_EXTRARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDATOS_EXTRARow(ByVal row As DATOS_EXTRARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As datasetregistros = New datasetregistros()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DATOS_EXTRADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CREDITOS_COP_RCVRow
        Inherits Global.System.Data.DataRow
        
        Private tableCREDITOS_COP_RCV As CREDITOS_COP_RCVDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCREDITOS_COP_RCV = CType(Me.Table,CREDITOS_COP_RCVDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITO_COP() As String
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.CREDITO_COPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CREDITO_COP' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.CREDITO_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODO_COP() As String
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.PERIODO_COPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PERIODO_COP' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.PERIODO_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_COP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.IMPORTE_COPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPORTE_COP' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.IMPORTE_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITO_RCV() As String
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.CREDITO_RCVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CREDITO_RCV' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.CREDITO_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODO_RCV() As String
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.PERIODO_RCVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PERIODO_RCV' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.PERIODO_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_RCV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.IMPORTE_RCVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPORTE_RCV' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.IMPORTE_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property N() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCREDITOS_COP_RCV.NColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'N' de la tabla 'CREDITOS_COP_RCV' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCREDITOS_COP_RCV.NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITO_COPNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.CREDITO_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITO_COPNull()
            Me(Me.tableCREDITOS_COP_RCV.CREDITO_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODO_COPNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.PERIODO_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODO_COPNull()
            Me(Me.tableCREDITOS_COP_RCV.PERIODO_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTE_COPNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.IMPORTE_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTE_COPNull()
            Me(Me.tableCREDITOS_COP_RCV.IMPORTE_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITO_RCVNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.CREDITO_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITO_RCVNull()
            Me(Me.tableCREDITOS_COP_RCV.CREDITO_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODO_RCVNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.PERIODO_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODO_RCVNull()
            Me(Me.tableCREDITOS_COP_RCV.PERIODO_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTE_RCVNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.IMPORTE_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTE_RCVNull()
            Me(Me.tableCREDITOS_COP_RCV.IMPORTE_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNNull() As Boolean
            Return Me.IsNull(Me.tableCREDITOS_COP_RCV.NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNNull()
            Me(Me.tableCREDITOS_COP_RCV.NColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INFO_GENERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableINFO_GENERAL As INFO_GENERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINFO_GENERAL = CType(Me.Table,INFO_GENERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_DELEGACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_DELEGACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_DELEGACION' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_DELEGACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_SUBDELEGACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_SUBDELEGACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_SUBDELEGACION' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_SUBDELEGACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_FECH_MOV() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_FECH_MOVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_FECH_MOV' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_FECH_MOVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_RAZON() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_RAZONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_RAZON' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_RAZONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_REGPAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_REGPATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_REGPAT' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_REGPATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_ACTIVIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_ACTIVIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_ACTIVIDAD' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_ACTIVIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_DOMICILIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_DOMICILIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_DOMICILIO' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_DOMICILIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_IMPORTE_TOTAL_LETRAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_IMPORTE_TOTAL_LETRASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_IMPORTE_TOTAL_LETRAS' de la tabla 'INFO_GENERAL' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_IMPORTE_TOTAL_LETRASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_JEF_DEP() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_JEF_DEPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_JEF_DEP' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_JEF_DEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_JEF_DEP() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_JEF_DEPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_JEF_DEP' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_JEF_DEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_JEF_OFI_REG() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_JEF_OFI_REGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_JEF_OFI_REG' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_JEF_OFI_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_JEF_OFI_REG() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_REGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_JEF_OFI_REG' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_JEF_OFI_EMI() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_JEF_OFI_EMIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_JEF_OFI_EMI' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_JEF_OFI_EMIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_JEF_OFI_EMI() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_EMIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_JEF_OFI_EMI' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_EMIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_JEF_OFI_COB() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_JEF_OFI_COBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_JEF_OFI_COB' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_JEF_OFI_COBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_JEF_OFI_COB() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_COBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_JEF_OFI_COB' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_COBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INTEGRADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INTEGRADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INTEGRADOR' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INTEGRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_INTEGRADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_INTEGRADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_INTEGRADOR' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_INTEGRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_FECH_AFIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_FECH_AFILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_FECH_AFIL' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_FECH_AFILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_RFC' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_NOM_DELEGADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_NOM_DELEGADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_NOM_DELEGADO' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_NOM_DELEGADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_INI_NOM_DELEGADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_INI_NOM_DELEGADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_INI_NOM_DELEGADO' de la tabla 'INFO_GENERAL' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_INI_NOM_DELEGADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property G_CRED_MAX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.G_CRED_MAXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'G_CRED_MAX' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.G_CRED_MAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RALE_USADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_GENERAL.RALE_USADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RALE_USADO' de la tabla 'INFO_GENERAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_GENERAL.RALE_USADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_DELEGACIONNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_DELEGACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_DELEGACIONNull()
            Me(Me.tableINFO_GENERAL.G_DELEGACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_SUBDELEGACIONNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_SUBDELEGACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_SUBDELEGACIONNull()
            Me(Me.tableINFO_GENERAL.G_SUBDELEGACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_FECH_MOVNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_FECH_MOVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_FECH_MOVNull()
            Me(Me.tableINFO_GENERAL.G_FECH_MOVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_RAZONNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_RAZONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_RAZONNull()
            Me(Me.tableINFO_GENERAL.G_RAZONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_REGPATNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_REGPATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_REGPATNull()
            Me(Me.tableINFO_GENERAL.G_REGPATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_ACTIVIDADNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_ACTIVIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_ACTIVIDADNull()
            Me(Me.tableINFO_GENERAL.G_ACTIVIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_DOMICILIONull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_DOMICILIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_DOMICILIONull()
            Me(Me.tableINFO_GENERAL.G_DOMICILIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_IMPORTE_TOTAL_LETRASNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_IMPORTE_TOTAL_LETRASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_IMPORTE_TOTAL_LETRASNull()
            Me(Me.tableINFO_GENERAL.G_IMPORTE_TOTAL_LETRASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_JEF_DEPNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_JEF_DEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_JEF_DEPNull()
            Me(Me.tableINFO_GENERAL.G_JEF_DEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_JEF_DEPNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_JEF_DEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_JEF_DEPNull()
            Me(Me.tableINFO_GENERAL.G_INI_JEF_DEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_JEF_OFI_REGNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_JEF_OFI_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_JEF_OFI_REGNull()
            Me(Me.tableINFO_GENERAL.G_JEF_OFI_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_JEF_OFI_REGNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_JEF_OFI_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_JEF_OFI_REGNull()
            Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_JEF_OFI_EMINull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_JEF_OFI_EMIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_JEF_OFI_EMINull()
            Me(Me.tableINFO_GENERAL.G_JEF_OFI_EMIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_JEF_OFI_EMINull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_JEF_OFI_EMIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_JEF_OFI_EMINull()
            Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_EMIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_JEF_OFI_COBNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_JEF_OFI_COBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_JEF_OFI_COBNull()
            Me(Me.tableINFO_GENERAL.G_JEF_OFI_COBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_JEF_OFI_COBNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_JEF_OFI_COBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_JEF_OFI_COBNull()
            Me(Me.tableINFO_GENERAL.G_INI_JEF_OFI_COBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INTEGRADORNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INTEGRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INTEGRADORNull()
            Me(Me.tableINFO_GENERAL.G_INTEGRADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_INTEGRADORNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_INTEGRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_INTEGRADORNull()
            Me(Me.tableINFO_GENERAL.G_INI_INTEGRADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_FECH_AFILNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_FECH_AFILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_FECH_AFILNull()
            Me(Me.tableINFO_GENERAL.G_FECH_AFILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_RFCNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_RFCNull()
            Me(Me.tableINFO_GENERAL.G_RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_NOM_DELEGADONull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_NOM_DELEGADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_NOM_DELEGADONull()
            Me(Me.tableINFO_GENERAL.G_NOM_DELEGADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_INI_NOM_DELEGADONull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_INI_NOM_DELEGADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_INI_NOM_DELEGADONull()
            Me(Me.tableINFO_GENERAL.G_INI_NOM_DELEGADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsG_CRED_MAXNull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.G_CRED_MAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetG_CRED_MAXNull()
            Me(Me.tableINFO_GENERAL.G_CRED_MAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRALE_USADONull() As Boolean
            Return Me.IsNull(Me.tableINFO_GENERAL.RALE_USADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRALE_USADONull()
            Me(Me.tableINFO_GENERAL.RALE_USADOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DATOS_EXTRARow
        Inherits Global.System.Data.DataRow
        
        Private tableDATOS_EXTRA As DATOS_EXTRADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDATOS_EXTRA = CType(Me.Table,DATOS_EXTRADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_SUBDEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_SUBDELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_SUBDEL' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_SUBDELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_RALE_COP() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_RALE_COPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_RALE_COP' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_RALE_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_RALE_RCV() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_RALE_RCVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_RALE_RCV' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_RALE_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_INTEGRADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_INTEGRADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_INTEGRADOR' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_INTEGRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_SALARIO_MINIMO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_SALARIO_MINIMOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_SALARIO_MINIMO' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_SALARIO_MINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_REGPAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_REGPATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_REGPAT' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_REGPATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_CRED_COP() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_CRED_COPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_CRED_COP' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_CRED_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_IMPORTE_COP() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_IMPORTE_COPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_IMPORTE_COP' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_IMPORTE_COPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_RANGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_RANGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_RANGO' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_RANGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_CRED_RCV() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_CRED_RCVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_CRED_RCV' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_CRED_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_IMPORTE_RCV() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_IMPORTE_RCVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_IMPORTE_RCV' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_IMPORTE_RCVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_OTROS_CREDITOS() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_OTROS_CREDITOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_OTROS_CREDITOS' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_OTROS_CREDITOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_REGISTRO_ANALISIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_REGISTRO_ANALISISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_REGISTRO_ANALISIS' de la tabla 'DATOS_EXTRA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_REGISTRO_ANALISISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_REGISTRO_SOLICITUD() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_REGISTRO_SOLICITUDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_REGISTRO_SOLICITUD' de la tabla 'DATOS_EXTRA' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_REGISTRO_SOLICITUDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_REGISTRO_DICTAMEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_REGISTRO_DICTAMENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_REGISTRO_DICTAMEN' de la tabla 'DATOS_EXTRA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_REGISTRO_DICTAMENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_AFIL_01() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_AFIL_01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_AFIL_01' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_AFIL_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_DOMICILIO_FISCAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_DOMICILIO_FISCALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_DOMICILIO_FISCAL' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_DOMICILIO_FISCALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_REFERENCIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_REFERENCIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_REFERENCIA' de la tabla 'DATOS_EXTRA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_REFERENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property E_FECHA_CLASIFICACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDATOS_EXTRA.E_FECHA_CLASIFICACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_FECHA_CLASIFICACION' de la tabla 'DATOS_EXTRA' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDATOS_EXTRA.E_FECHA_CLASIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_SUBDELNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_SUBDELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_SUBDELNull()
            Me(Me.tableDATOS_EXTRA.E_SUBDELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_RALE_COPNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_RALE_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_RALE_COPNull()
            Me(Me.tableDATOS_EXTRA.E_RALE_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_RALE_RCVNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_RALE_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_RALE_RCVNull()
            Me(Me.tableDATOS_EXTRA.E_RALE_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_INTEGRADORNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_INTEGRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_INTEGRADORNull()
            Me(Me.tableDATOS_EXTRA.E_INTEGRADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_SALARIO_MINIMONull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_SALARIO_MINIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_SALARIO_MINIMONull()
            Me(Me.tableDATOS_EXTRA.E_SALARIO_MINIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_REGPATNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_REGPATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_REGPATNull()
            Me(Me.tableDATOS_EXTRA.E_REGPATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_CRED_COPNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_CRED_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_CRED_COPNull()
            Me(Me.tableDATOS_EXTRA.E_CRED_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_IMPORTE_COPNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_IMPORTE_COPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_IMPORTE_COPNull()
            Me(Me.tableDATOS_EXTRA.E_IMPORTE_COPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_RANGONull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_RANGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_RANGONull()
            Me(Me.tableDATOS_EXTRA.E_RANGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_CRED_RCVNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_CRED_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_CRED_RCVNull()
            Me(Me.tableDATOS_EXTRA.E_CRED_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_IMPORTE_RCVNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_IMPORTE_RCVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_IMPORTE_RCVNull()
            Me(Me.tableDATOS_EXTRA.E_IMPORTE_RCVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_OTROS_CREDITOSNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_OTROS_CREDITOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_OTROS_CREDITOSNull()
            Me(Me.tableDATOS_EXTRA.E_OTROS_CREDITOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_REGISTRO_ANALISISNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_REGISTRO_ANALISISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_REGISTRO_ANALISISNull()
            Me(Me.tableDATOS_EXTRA.E_REGISTRO_ANALISISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_REGISTRO_SOLICITUDNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_REGISTRO_SOLICITUDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_REGISTRO_SOLICITUDNull()
            Me(Me.tableDATOS_EXTRA.E_REGISTRO_SOLICITUDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_REGISTRO_DICTAMENNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_REGISTRO_DICTAMENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_REGISTRO_DICTAMENNull()
            Me(Me.tableDATOS_EXTRA.E_REGISTRO_DICTAMENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_AFIL_01Null() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_AFIL_01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_AFIL_01Null()
            Me(Me.tableDATOS_EXTRA.E_AFIL_01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_DOMICILIO_FISCALNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_DOMICILIO_FISCALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_DOMICILIO_FISCALNull()
            Me(Me.tableDATOS_EXTRA.E_DOMICILIO_FISCALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_REFERENCIANull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_REFERENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_REFERENCIANull()
            Me(Me.tableDATOS_EXTRA.E_REFERENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsE_FECHA_CLASIFICACIONNull() As Boolean
            Return Me.IsNull(Me.tableDATOS_EXTRA.E_FECHA_CLASIFICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetE_FECHA_CLASIFICACIONNull()
            Me(Me.tableDATOS_EXTRA.E_FECHA_CLASIFICACIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CREDITOS_COP_RCVRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CREDITOS_COP_RCVRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CREDITOS_COP_RCVRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CREDITOS_COP_RCVRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INFO_GENERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INFO_GENERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INFO_GENERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INFO_GENERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DATOS_EXTRARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DATOS_EXTRARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DATOS_EXTRARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DATOS_EXTRARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace datasetregistrosTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CREDITOS_COP_RCVTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CREDITOS_COP_RCV"
            tableMapping.ColumnMappings.Add("CREDITO_COP", "CREDITO_COP")
            tableMapping.ColumnMappings.Add("PERIODO_COP", "PERIODO_COP")
            tableMapping.ColumnMappings.Add("IMPORTE_COP", "IMPORTE_COP")
            tableMapping.ColumnMappings.Add("CREDITO_RCV", "CREDITO_RCV")
            tableMapping.ColumnMappings.Add("PERIODO_RCV", "PERIODO_RCV")
            tableMapping.ColumnMappings.Add("IMPORTE_RCV", "IMPORTE_RCV")
            tableMapping.ColumnMappings.Add("N", "N")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionStringMaster").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        0 AS N, '' AS CREDITO_COP, '' AS PERIODO_COP, 0.00 AS IMPORTE_COP, "& _ 
                "'' AS CREDITO_RCV, '' AS PERIODO_RCV, 0.00 AS IMPORTE_RCV"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As datasetregistros.CREDITOS_COP_RCVDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As datasetregistros.CREDITOS_COP_RCVDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As datasetregistros.CREDITOS_COP_RCVDataTable = New datasetregistros.CREDITOS_COP_RCVDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class INFO_GENERALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "INFO_GENERAL"
            tableMapping.ColumnMappings.Add("G_DELEGACION", "G_DELEGACION")
            tableMapping.ColumnMappings.Add("G_SUBDELEGACION", "G_SUBDELEGACION")
            tableMapping.ColumnMappings.Add("G_FECH_MOV", "G_FECH_MOV")
            tableMapping.ColumnMappings.Add("G_RAZON", "G_RAZON")
            tableMapping.ColumnMappings.Add("G_REGPAT", "G_REGPAT")
            tableMapping.ColumnMappings.Add("G_ACTIVIDAD", "G_ACTIVIDAD")
            tableMapping.ColumnMappings.Add("G_DOMICILIO", "G_DOMICILIO")
            tableMapping.ColumnMappings.Add("G_IMPORTE_TOTAL_LETRAS", "G_IMPORTE_TOTAL_LETRAS")
            tableMapping.ColumnMappings.Add("G_JEF_DEP", "G_JEF_DEP")
            tableMapping.ColumnMappings.Add("G_INI_JEF_DEP", "G_INI_JEF_DEP")
            tableMapping.ColumnMappings.Add("G_JEF_OFI_REG", "G_JEF_OFI_REG")
            tableMapping.ColumnMappings.Add("G_INI_JEF_OFI_REG", "G_INI_JEF_OFI_REG")
            tableMapping.ColumnMappings.Add("G_JEF_OFI_EMI", "G_JEF_OFI_EMI")
            tableMapping.ColumnMappings.Add("G_INI_JEF_OFI_EMI", "G_INI_JEF_OFI_EMI")
            tableMapping.ColumnMappings.Add("G_JEF_OFI_COB", "G_JEF_OFI_COB")
            tableMapping.ColumnMappings.Add("G_INI_JEF_OFI_COB", "G_INI_JEF_OFI_COB")
            tableMapping.ColumnMappings.Add("G_INTEGRADOR", "G_INTEGRADOR")
            tableMapping.ColumnMappings.Add("G_INI_INTEGRADOR", "G_INI_INTEGRADOR")
            tableMapping.ColumnMappings.Add("G_FECH_AFIL", "G_FECH_AFIL")
            tableMapping.ColumnMappings.Add("G_RFC", "G_RFC")
            tableMapping.ColumnMappings.Add("G_NOM_DELEGADO", "G_NOM_DELEGADO")
            tableMapping.ColumnMappings.Add("G_INI_NOM_DELEGADO", "G_INI_NOM_DELEGADO")
            tableMapping.ColumnMappings.Add("G_CRED_MAX", "G_CRED_MAX")
            tableMapping.ColumnMappings.Add("RALE_USADO", "RALE_USADO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionStringMaster").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        '' AS G_DELEGACION, '' AS G_SUBDELEGACION, '' AS G_FECH_MOV, '' AS "& _ 
                "G_RAZON, '' AS G_REGPAT, '' AS G_RFC, '' AS G_ACTIVIDAD, '' AS G_DOMICILIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       '' AS G_IMPORTE_TOTAL_LETRAS, '' AS G_JEF_DEP, '' AS G_IN"& _ 
                "I_JEF_DEP, '' AS G_JEF_OFI_REG, '' AS G_INI_JEF_OFI_REG, '' AS G_JEF_OFI_EMI, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         '' AS G_INI_JEF_OFI_EMI, '' AS G_JEF_OFI_COB, '' AS G_I"& _ 
                "NI_JEF_OFI_COB, '' AS G_INTEGRADOR, '' AS G_INI_INTEGRADOR, '' AS G_NOM_DELEGADO"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         '' AS G_INI_NOM_DELEGADO, 0 AS G_CRED_MAX, '' AS RA"& _ 
                "LE_USADO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As datasetregistros.INFO_GENERALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As datasetregistros.INFO_GENERALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As datasetregistros.INFO_GENERALDataTable = New datasetregistros.INFO_GENERALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DATOS_EXTRATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DATOS_EXTRA"
            tableMapping.ColumnMappings.Add("E_SUBDEL", "E_SUBDEL")
            tableMapping.ColumnMappings.Add("E_RALE_COP", "E_RALE_COP")
            tableMapping.ColumnMappings.Add("E_RALE_RCV", "E_RALE_RCV")
            tableMapping.ColumnMappings.Add("E_INTEGRADOR", "E_INTEGRADOR")
            tableMapping.ColumnMappings.Add("E_SALARIO_MINIMO", "E_SALARIO_MINIMO")
            tableMapping.ColumnMappings.Add("E_REGPAT", "E_REGPAT")
            tableMapping.ColumnMappings.Add("E_CRED_COP", "E_CRED_COP")
            tableMapping.ColumnMappings.Add("E_IMPORTE_COP", "E_IMPORTE_COP")
            tableMapping.ColumnMappings.Add("E_RANGO", "E_RANGO")
            tableMapping.ColumnMappings.Add("E_CRED_RCV", "E_CRED_RCV")
            tableMapping.ColumnMappings.Add("E_IMPORTE_RCV", "E_IMPORTE_RCV")
            tableMapping.ColumnMappings.Add("E_OTROS_CREDITOS", "E_OTROS_CREDITOS")
            tableMapping.ColumnMappings.Add("E_REGISTRO_ANALISIS", "E_REGISTRO_ANALISIS")
            tableMapping.ColumnMappings.Add("E_REGISTRO_SOLICITUD", "E_REGISTRO_SOLICITUD")
            tableMapping.ColumnMappings.Add("E_REGISTRO_DICTAMEN", "E_REGISTRO_DICTAMEN")
            tableMapping.ColumnMappings.Add("E_AFIL_01", "E_AFIL_01")
            tableMapping.ColumnMappings.Add("E_DOMICILIO_FISCAL", "E_DOMICILIO_FISCAL")
            tableMapping.ColumnMappings.Add("E_REFERENCIA", "E_REFERENCIA")
            tableMapping.ColumnMappings.Add("E_FECHA_CLASIFICACION", "E_FECHA_CLASIFICACION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionStringMaster").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        '' AS E_SUBDEL, '' AS E_RALE_COP, '' AS E_RALE_RCV, '' AS E_INTEGRA"& _ 
                "DOR, '' AS E_SALARIO_MINIMO, '' AS E_REGPAT, '' AS E_CRED_COP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          '' AS E_IMPORTE_COP, '' AS E_RANGO, '' AS E_CRED_RCV, '' AS E_IMPORTE_"& _ 
                "RCV, '' AS E_OTROS_CREDITOS, '' AS E_REGISTRO_ANALISIS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   '' AS E_REGISTRO_SOLICITUD, '' AS E_REGISTRO_DICTAMEN, GETDATE() AS E_FECHA_C"& _ 
                "LASIFICACION, '' AS E_AFIL_01, '' AS E_DOMICILIO_FISCAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    '' AS E_REFERENCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As datasetregistros.DATOS_EXTRADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As datasetregistros.DATOS_EXTRADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As datasetregistros.DATOS_EXTRADataTable = New datasetregistros.DATOS_EXTRADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As datasetregistros, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As datasetregistros, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As datasetregistros, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As datasetregistros) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
